spring:
#  h2:
#    console:
#      enabled: true
#      path: /h2
#  datasource:
#    url: jdbc:h2:mem:test;NON_KEYWORDS=USER
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        order_inserts: true
        order_updates: true
    database: mysql
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    open-in-view: true

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${{ secrets.SQL_URL }}
    username: ${{ secrets.SQL_USERNAME }}
    password: ${{ secrets.SQL_PASSWORD }}

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${{ secrets.GOOGLE_CLIENT_ID }}
            clientSecret: ${{ secrets.GOOGLE_SECRET }}
            scope:
              - email

          kakao:
            clientId: ${{ secrets.KAKAO_CLIENT_ID }}
            clientSecret: ${{ secrets.KAKAO_SECRET }}
            clientAuthenticationMethod: post
            authorizationGrantType: authorization_code
            redirectUri: ${{ secrets.KAKAO_REDIRECT }}
            scope:
              - account_email
            clientName: Kakao

          naver:
            clientId: ${{ secrets.NAVER_CLIENT_ID }}
            clientSecret: ${{ secrets.NAVER_SECRET }}
            clientAuthenticationMethod: post
            authorizationGrantType: authorization_code
            redirectUri: ${{ secrets.NAVER_REDIRECT }}
            scope:
              - email
            clientName: Naver

        provider:
          kakao:
            authorizationUri: https://kauth.kakao.com/oauth/authorize
            tokenUri: https://kauth.kakao.com/oauth/token
            userInfoUri: https://kapi.kakao.com/v2/user/me
            userNameAttribute: id

          naver:
            authorizationUri: https://nid.naver.com/oauth2.0/authorize
            tokenUri: https://nid.naver.com/oauth2.0/token
            userInfoUri: https://openapi.naver.com/v1/nid/me
            userNameAttribute: response

logging:
  level:
    org:
      springframework:
        orm:
          jpa: DEBUG

server:
  servlet:
    encoding:
      force-response: true

jwt:
  key: ${{ secrets.JWT_KEY }}
  accessTokenExpirationMinutes: ${{ secrets.ACCESS_EXPIRE_TIME }}
  refreshTokenExpirationMinutes: ${{ secrets.REFRESH_EXPIRE_TIME }}
